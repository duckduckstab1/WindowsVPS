name: rdp rewrite V2
on:

  workflow_dispatch:

jobs:

  build:

    runs-on: windows-2019

    strategy:

      matrix:

        node-version: [14.x]

    steps:

    - uses: actions/checkout@v2

    - name: Setup Node.js

      uses: actions/setup-node@v2

      with:

        node-version: ${{ matrix.node-version }}

    - name: Install dependencies

      run: echo Haha, no!

    


    - name: Install bafoom

      run: |

        $wc = New-Object System.Net.WebClient

        $wc.DownloadFile('https://github.com/PowerShell/Win32-OpenSSH/releases/download/v8.0.0.0p1-Beta/OpenSSH-Win64.zip', 'openssh.zip')

        Expand-Archive -Path .\openssh.zip -DestinationPath 'C:\Program Files\OpenSSH'

        New-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment' -Name PATH -Value "$($env:ProgramFiles)\OpenSSH;$($env:ProgramFiles)\OpenSSH\bin" -PropertyType ExpandString -Force

    - name: Enable RDP

      run: |

        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name fDenyTSConnections -Value 0

        Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'

    - name: Create user account

      run: |

        $password = ConvertTo-SecureString -String "lol@123" -Force -AsPlainText

        New-LocalUser "localadmin" -Password $password

    - name: Set RDP permissions

      run: |

        Set-LocalUser -Name "runneradmin" -PasswordNeverExpires 1

        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "localadmin"

        Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon' -Name AutoAdminLogon -Value 1 -Force

        Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon' -Name DefaultUserName -Value "runneradmin" -Force

        Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon' -Name DefaultPassword -Value "lol@123" -Force

      env:

        NGROK_AUTH: ${{ secrets.NGROK_AUTH }}

        NGROK_PORT: 3389

        NGROK_REGION: us


    - name: basement 
      run: |

        Start-Process -FilePath 'ngrok.exe' -ArgumentList 'authtoken $env:NGROK_AUTH; tcp $env:NGROK_PORT --region=$env:NGROK_REGION' -PassThru | Wait-Process

        $ngrokUrl = ((Get-Content -Path "ngrok\ngrok.log" -Wait -Tail 1) -replace '\S*http://', 'https://')

        Write-Host "Ngrok Tunnel URL: $ngrokUrl"

    - name: Stop Ngrok

      run: |

        Get-Process -Name ngrok | Stop-Process

    # This job will automatically expire after 30 minutes

    - name: Schedule job expiration

      run: |

        Start-Sleep -Seconds 1800

        Write-Host "Job expired"

